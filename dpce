#!/bin/bash

echo -e "\\e[36mDrupal config partial export helper v1\\e[0m\\n"

test_root_dir () {
    unameOut="$(uname -s)"
    case "${unameOut}" in
        Linux*)     machine=Linux;;
        Darwin*)    machine=Mac;;
        CYGWIN*)    machine=Cygwin;;
        MINGW*)     machine=MinGw;;
        *)          machine="UNKNOWN:${unameOut}"
    esac
    
    # Test which directory path syntax to use.
    if [ "$machine" == "Cygwin" ] || [ "$machine" == "MinGw" ]; then
        pwdOut="$(pwd -W)"
        pwdCommand="pwd -W"
    else 
        pwdOut="$(pwd)"
        pwdCommand="pwd"
    fi
    
    # Test if not in Drupal root nor an alias provided. (Drush bootstrap will fail.)
    drush_drupal_root=$(drush $d_alias eval "print drush_get_context('DRUSH_DRUPAL_ROOT')")
    drupal_root=$(cd "$drush_drupal_root" && eval $pwdCommand)
    if [ "$pwdOut" != "$drupal_root" ] && [ -z "$d_alias" ]; then
        echo -e "[\\e[1;31mFail\\e[0m] Please provide a Drush alias or run dpce from your Drupal docroot."
        exit 2
    fi

    # Test provided drush alias 
    if [ ! -d "$drush_drupal_root" ]; then
        echo -e "[\\e[1;31mFail\\e[0m] Can't find Drush alias $d_alias."
        exit 2;
    elif [ -z "$d_alias" ]; then
        echo -e "[\\e[1;32mSuccess\\e[0m] Site found - using local directory.\\n"
    else 
        echo -e "[\\e[1;32mSuccess\\e[0m] Site found.\\n"
    fi
}

collect_data_export () {
    read -e -p "Drush alias? (optional - e.x., @alias): " d_alias
    test_root_dir  
    while [ -z "$export_dir_in" ];
        do
            read -e -p "Directory to export full configuration (this should be outside of your Drupal repository): " export_dir_in
        done
    export_dir=$(eval readlink -f "$export_dir_in") || \
        { echo "[\\e[1;31mFail\\e[0m] Invalid directory."; exit 1; }
    if [ -d "$export_dir" ]; then 
        echo "Exporting config to $export_dir..."       
        drush "$d_alias" cex --destination="$export_dir"
        
    else
        read -e -p "Directory $export_dir does not exist. Create? [y/n]:" create_export_dir
        if [ "$create_export_dir" != "y" ]; then
            echo -e "[\\e[1;31mFail\\e[0m] Export failed. Please run dpce again and choose an export directory outside of your Drupal repository."
            exit 2
        else             
            mkdir "$export_dir" || \
                { echo "[\\e[1;31mFail\\e[0m] Could not create directory."; exit 1; }
            echo -e "[\\e[1;32mSuccess\\e[0m] Export directory created at $export_dir\\nExporting config..."
            drush "$d_alias" cex --destination="$export_dir"
        fi
    fi

}

find_configs () {
    read -e -p "Find config files [regex]?: " glob
    # ref: https://www.gnu.org/software/findutils/manual/html_node/find_html/findutils_002ddefault-regular-expression-syntax.html#findutils_002ddefault-regular-expression-syntax
    # @TODO: use regex instead of glob
    findresult=$(find "$export_dir" -regex "$glob" -type f)
    resultcount=$(find "$export_dir" -regex "$glob" -type f | wc -l)
    echo -e "$findresult\\n Found $resultcount files." 
    if [ -z $resultcount ] || [ $resultcount == 0 ]; then
        echo -e "Try surrounding search terms with '.*', e.x.: .*\(contains\)*\(these\)*\(words\).*\\nRun dpce --help for more advanced help on regex matching."
        find_configs
    else confirm
    fi
}

confirm () {
    read -e -p "Confirm list? [y/n]: " isconfirmed
    if [ -z "$isconfirmed" ]; then
        confirm
    fi

}

import () {
    read -e -p "Import directory? (This should be inside your Drupal repository but outside your docroot): " import_dir
    realimportdir=$(eval readlink -f "$import_dir") || \
        { echo "[\\e[1;31mFail\\e[0m] Invalid directory."; exit 1; }

    if [ -d "$realimportdir" ]; then
    # @TODO Use Regex instead of glob        
        cd "$export_dir" &&  find . -regex "$glob" -print0 | xargs cp -t "$realimportdir" --null
        echo -e "[\\e[1;32mSuccess\\e[0m] \\nPlease commit these files to your git repository and push to your remote. Then ssh to your remote and run:\\ndrush config-import --partial --source=\"$realimportdir\""
    else
        read -e -p "Directory \"$import_dir\" does not exist. Create it? [y/n]: " create_confirm
        if [ "$create_confirm" == "y" ]; then
        # @TODO Use Regex instead of glob
            mkdir "$realimportdir" || \
            { echo "[\\e[1;31mFail\\e[0m] Could not create directory."; exit 1; }
            cd "$export_dir" && find . -regex "$glob" -print0 | xargs cp -t "$realimportdir" --null
            echo -e "[\\e[1;32mSuccess\\e[0m] \\nPlease commit these files to your git repository and push to your remote. Then ssh to your remote and run:\\ndrush config-import --partial --source=\"$realimportdir\""            
        else exit 2
        fi
    fi   
}

collect_data_export
while [ "$isconfirmed" != "y" ]; 
    do
        find_configs
    done
import